{"version":3,"sources":["images/mail.svg","Homepage.js","SignIn.js","ConfirmMail.js","Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Homepage","countDownTimer","distance","Date","getTime","days","Math","floor","hours","minutes","setState","countDownDays","countDownHours","countDownMinutes","nextStep","currentStep","step","state","petitionNumber","isLoaded","setInterval","this","axios","get","then","res","data","petition_count","petitionData","className","to","React","Component","SignIn","getTimeStamp","now","sectimestamp","getPetitionNumber","handleModal","loadingStatus","isLoading","handleChange","event","name","target","value","handleRadio","parseInt","mitzeichnerliste_name","handleSubmit","preventDefault","user","email","passwort","_charset_","post","console","log","message","includes","result","loadingContent","Fragment","Icon","loading","color","size","Grid","id","textAlign","style","height","verticalAlign","Column","width","borderRadius","Header","as","marginTop","paddingTop","Form","onSubmit","Segment","stacked","backgroundColor","Input","fluid","icon","iconPosition","placeholder","onChange","required","type","autoComplete","checked","Button","visibility","onClick","circular","inverted","ConfirmMail","e","Image","src","mail","margin","fontSize","Register","responseMessage","registerSuccess","passwort_wiederholen","datenschutz_ok","nutzungsbed_ok","vorname","nachname","str_nr","ort","land","plz","JavaScriptEnable","btAbsendenMitRegistrieren","setTimeout","props","history","push","catch","error","modalContent","maxWidth","background","Field","htmlFor","Group","widths","display","Popup","trigger","content","position","Checkbox","label","minHeight","Select","options","key","text","withRouter","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fabc870c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mail.15bf3778.svg\";","import React from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport { Button} from 'semantic-ui-react'\nimport './styles/Homepage.scss';\nclass Homepage extends React.Component {\n  constructor(){\n    super()\n    this.state = ({\n      countDownDays: 0,\n      countDownHours: 0,\n      countDownMinutes:0,\n      petitionNumber: 0,\n      isLoaded: false\n    })\n  }\n  componentDidMount(){\n    setInterval(this.countDownTimer, 1000)\n    axios.get(`https://germany-diplomatic-petition.appspot.com/petition`)\n      .then(res => {\n        // const jsonFormat = res.json();\n        const data = res.data\n        const petitionNumber = data.petition_count\n        this.setState({\n          petitionNumber: petitionNumber,\n          isLoaded: true\n        });\n      })\n  }\n\n  countDownTimer = () =>{\n    const countDownDate = new Date(\"Oct 10, 2019 00:00:00 GMT+02:00\").getTime()\n    let now = new Date().getTime()\n    let distance = countDownDate - now\n    let days = Math.floor(distance / (1000 * 60 * 60 * 24))\n    let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60) )\n    this.setState({\n      countDownDays: days,\n      countDownHours: hours,\n      countDownMinutes:minutes,\n    })\n  }\n  nextStep = () =>{\n    let currentStep = this.step.currentStep\n    currentStep++\n    this.setState({\n      currentStep: currentStep\n    })\n  }\n  render() {\n    const {countDownDays,countDownHours,countDownMinutes, petitionNumber, isLoaded} = this.state\n    let petitionData;\n    if(isLoaded === false){\n      petitionData = (<span>抓取中...</span>)\n    }else{\n      petitionData = (<span>{petitionNumber}</span>)\n    }\n    return(\n      <div className=\"App-header\">\n        <h1>自己的外交自己救</h1>\n        <div className=\"reason\">德國國會可通過要求德國政府與臺灣建立正式外交關係，請願內容將予以公開後於國會討論，惟其先決條件須在4週內（自2019年9月11日起計至10月10日止）獲得全球5萬人以上之連署。</div>\n        <p className='count-down'>連署已截止，謝謝！</p>\n          <Link className=\"petition-button\" to=\"/step1\" >開始連署</Link>\n        <h3>目前連署人數：{petitionData}</h3>\n\n      </div>\n    )\n\n  }\n}\n\nexport default Homepage;\n","import React from 'react';\nimport axios from 'axios';\nimport { Button, Form, Grid, Header, Segment, Icon } from 'semantic-ui-react'\nimport './styles/SignIn.scss';\n\nclass SignIn extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      email: '',\n      passwort:'',\n      mitzeichnerliste_name: 1,\n      sectimestamp: null,\n      _charset_:'UTF-8',\n      isLoading: false,\n      result: null,\n      petitionNumber: 0,\n    }\n  }\n\n  componentDidMount(){\n    this.getTimeStamp()\n  }\n\n  getTimeStamp =()=>{\n    let now = new Date().getTime()\n    this.setState({\n      sectimestamp: now\n    })\n  }\n  getPetitionNumber= ()=>{\n    axios.get(`https://germany-diplomatic-petition.appspot.com/petition`)\n      .then(res => {\n        const data = res.data\n        const petitionNumber = data.petition_count\n        this.setState({\n          petitionNumber: petitionNumber,\n        });\n      })\n  }\n  handleModal = ()=>{\n    let loadingStatus = this.state.isLoading\n    this.setState({\n      isLoading:!loadingStatus\n    })\n  }\n  handleChange = event => {\n    let name= event.target.name\n    let value = event.target.value\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleRadio = event =>{\n    let name= event.target.name\n    let value = parseInt(event.target.value)\n    this.setState({\n      mitzeichnerliste_name: value\n    });\n  }\n\n  handleSubmit = event =>{\n    event.preventDefault();\n    const user ={\n      email: this.state.email,\n      passwort:this.state.passwort,\n      mitzeichnerliste_name: this.state.mitzeichnerliste_name,\n      sectimestamp:this.state.sectimestamp,\n      _charset_:'UTF-8',\n    }\n    this.setState({\n      isLoading: true\n    })\n    axios.post('https://germany-diplomatic-petition.appspot.com/signin',user).then(res=>{\n      console.log(res)\n     if(res.data.message.includes(\"success\")){\n      this.getPetitionNumber();\n      this.setState({\n        result: \"success\"\n      })\n      console.log('success')\n     }else if(res.data.message.includes(\"failed\")){\n       this.setState({\n        result: \"fail\"\n       })\n     }else{\n       console.log(res.data.message)\n     }\n  })\n}\n  render(){\n    let loadingContent;\n    const {isLoading,result} = this.state\n    if(isLoading && !result){\n      loadingContent =(<React.Fragment>\n        <Icon loading name='spinner' color='#fff549' size='huge'/>\n          <p>處理中...</p>\n      </React.Fragment>)\n    }else if(isLoading && result === \"fail\"){\n      loadingContent =(\n        <React.Fragment>\n        <Icon name=\"times circle\" size='huge' color='#fff549'/>\n        <p className=\"model-text\">連署失敗，請重新確認註冊信箱及密碼</p>\n      </React.Fragment>\n      )\n    }else if(isLoading && result === \"success\"){\n      loadingContent =(\n        <React.Fragment>\n          <Icon name=\"thumbs up outline\" size=\"huge\" color=\"#fff549\"/>\n        <p className=\"model-text\">連署成功！謝謝你的一份心意</p>\n        <p>目前連署人數為：{this.state.petitionNumber}</p>\n      </React.Fragment>\n      )\n    }\n    return(\n      <Grid id=\"petition-page\" textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n    <Grid.Column style={{ width:'480px', borderRadius:'5px'}}>\n      <Header as='h2' color='black' textAlign='center' style={{marginTop:'20px',paddingTop: '30px',color :'#fff' }}>\n        Step 3 : 立即連署\n      </Header>\n      <Form size='large' onSubmit={this.handleSubmit}>\n        <Segment stacked style={{backgroundColor: 'rgba(255,255,255,0.2)'}}>\n          <Form.Input fluid icon='user' name=\"email\" iconPosition='left' placeholder='請輸入註冊信箱' onChange={this.handleChange} required />\n          <Form.Input\n            fluid\n            icon='lock'\n            iconPosition='left'\n            placeholder='請輸入密碼'\n            type='password'\n            autoComplete=\"false\"\n            name=\"passwort\"\n            required\n            onChange={this.handleChange}\n          />\n          <div className=\"petition-way\">\n          <Header as='h4' color='black' textAlign='left'>選擇連署方式：</Header>\n\n          <input type=\"radio\" name=\"mitzeichnerliste_name\" value=\"1\" onChange={this.handleRadio} checked></input><span className=\"radio-text\">我想在請願名單列表中列出全名和姓氏</span>\n          <br></br>\n          <input type=\"radio\" name=\"mitzeichnerliste_name\" value=\"0\" onChange={this.handleRadio}></input><span className=\"radio-text\">我不想列出名字，列出註冊時自動創建的連署人編號即可</span>\n        </div>\n          <Button className=\"petition-btn\" fluid size='large' type=\"submit\">\n           送出連署\n          </Button>\n          <div className=\"modal\" style={{visibility: this.state.isLoading? \"visible\":\"hidden\"}}>\n          <div className=\"modal-content\">\n            <Icon name=\"close\" className=\"modal-close\" size=\"small\" onClick={this.handleModal} circular inverted/>\n            {loadingContent}\n          </div>\n          </div>\n        </Segment>\n      </Form>\n    </Grid.Column>\n  </Grid>\n    )\n  }\n}\n\nexport default SignIn","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react'\nimport './styles/ConfirmMail.scss';\nimport mail from './images/mail.svg'\nclass ConfirmMail extends React.Component{\n  state = {}\n  handleChange = (e, { value }) => this.setState({ value })\n  render(){\n    return(\n      <Grid id=\"petition-page\" textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n    <Grid.Column style={{ width:'480px',  borderRadius:'5px'}}>\n      <Header as='h2' color='black' textAlign='center'style={{marginTop:'20px',paddingTop: '30px',color :'#fff' }}>\n        Step 2 : 收信確認\n      </Header>\n      <Form size='large'>\n        <Segment stacked style={{backgroundColor: 'rgba(255,255,255,0.2)'}}>\n        <Image src={mail} size='small' style={{margin:'0 auto'}}/>\n        <p style={{fontSize:'20px',marginTop:'1em'}}>請前往註冊信箱收取<span style={{color: 'red'}}>官方確認信(德文)</span>(需等待2-3分鐘)，並點擊信件內中的超連結來啟動帳號</p>\n        <Link to=\"/step3\" ><Button className=\"petition-btn\" fluid size='large'>\n         確認完畢\n          </Button></Link>\n        </Segment>\n      </Form>\n    </Grid.Column>\n  </Grid>\n    )\n  }\n}\n\nexport default ConfirmMail","import React from 'react';\nimport { BrowserRouter as Switch, Link } from \"react-router-dom\";\nimport { Button, Form, Grid, Header, Segment,Checkbox, Select,Icon,Popup } from 'semantic-ui-react'\nimport './styles/Register.scss';\nimport axios from 'axios';\nimport {withRouter} from \"react-router-dom\";\n\n\nclass Register extends React.Component{\n  constructor(){\n    super()\n    this.state ={\n      email:'',\n      passwort:'',\n      passwort_wiederholen:'',\n      datenschutz_ok: 1,\n      nutzungsbed_ok: 1,\n      vorname:'',\n      nachname:'',\n      str_nr:'',\n      ort:'',\n      land:'TW',\n      plz:'',\n      sectimestamp:'',\n      isLoading: false,\n      responseMessage:'',\n      registerSuccess: false\n    }\n  }\n  componentDidMount(){\n    this.getTimeStamp()\n  }\n  getTimeStamp =()=>{\n    let now = new Date().getTime()\n    this.setState({\n      sectimestamp: now\n    })\n  }\n  handleChange = event => {\n    let name= event.target.name\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  handleModal = ()=>{\n    let loadingStatus = this.state.isLoading\n\n    this.setState({\n      isLoading:!loadingStatus,\n      responseMessage:'',\n      registerSuccess: null,\n      email:'',\n      passwort:'',\n      passwort_wiederholen:'',\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setState({\n      isLoading: true,\n    })\n    const user = {\n      email: this.state.email,\n      passwort:this.state.passwort,\n      passwort_wiederholen:this.state.passwort_wiederholen,\n      datenschutz_ok:this.state.datenschutz_ok,\n      nutzungsbed_ok:this.state.nutzungsbed_ok,\n      vorname:this.state.vorname,\n      nachname:this.state.nachname,\n      str_nr:this.state.str_nr,\n      ort:this.state.ort,\n      land:this.state.land,\n      plz:this.state.plz,\n      sectimestamp:this.state.sectimestamp,\n      _charset_:'UTF-8',\n      JavaScriptEnable:true,\n      btAbsendenMitRegistrieren:\"Jetzt registrieren\"\n    };\n\n    axios.post('https://germany-diplomatic-petition.appspot.com/register',user).then(res=> {\n      console.log(res)\n      if('email' in res.data){\n        this.setState({\n          responseMessage: res.data.email\n        })\n      }else if('passwort' in res.data ){\n        this.setState({\n          responseMessage: res.data.passwort\n        })\n      }else if('passwort_wiederholen' in res.data ){\n        this.setState({\n          responseMessage: res.data.passwort_wiederholen\n        })\n      }else if(res.data.message && res.data.message.includes('registered')){\n        this.setState({\n          responseMessage: '請確認信箱是否已經註冊過'\n        })\n      }else if(res.data.message && res.data.message.includes('successfully')){\n        this.setState({\n          registerSuccess: true\n        })\n        setTimeout(() => {\n          this.props.history.push(\"/step2\")\n        }, 2000);\n      }else{\n        this.setState({\n          responseMessage: res.data.message\n        })\n      }\n    }\n    ).catch(error=>console.log(error))\n   }\n  render(){\n    let modalContent;\n    const{responseMessage,isLoading,registerSuccess} = this.state;\n    if(isLoading && registerSuccess){\n      modalContent =(<React.Fragment>\n        <Icon name=\"thumbs up outline\" size=\"huge\" color=\"#fff549\"/>\n        <p className=\"model-text\">註冊成功！</p>\n      </React.Fragment>)\n    }else if(isLoading && !responseMessage){\n      modalContent =(<React.Fragment>\n        <Icon loading name='spinner' color='#fff549' size='huge'/>\n          <p className=\"model-text\">處理中...</p>\n      </React.Fragment>)\n    } else if(isLoading && responseMessage){\n      modalContent =(<React.Fragment>\n        <Icon name=\"times circle\" size='huge' color='#fff549'/>\n        <p className=\"model-text\">註冊失敗 :{responseMessage}</p>\n      </React.Fragment>)\n    }\n    const countryOptions = [\n      { key: 'TW', value: 'TW', text: '台灣' }\n    ]\n    return(\n      <Grid id=\"registration-page\" textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ borderRadius:'5px', maxWidth: '1024px'}}>\n        <Header as='h2' color='black' textAlign='center' style={{marginTop:'20px',paddingTop: '30px',color :'#fff' }}>\n          Step 1 : 立即註冊\n        </Header>\n        <Form size='large' className=\"form-container\" onSubmit={this.handleSubmit} style={{background: 'transparent'}}>\n          <Segment stacked style={{margin: '1rem',height:'430px',width: '480px', backgroundColor: 'rgba(255,255,255,0.2)'}}>\n          <Header as='h3'>帳戶資訊</Header>\n          <Form.Field required>\n            <label htmlFor=\"email\">E-mail</label>\n            <input type=\"text\" name=\"email\" placeholder=\"請填入未註冊過的E-mail\" onChange={this.handleChange} value={this.state.email}required=\"required\"\n            />\n          </Form.Field>\n          <Form.Group widths='equal'>\n          <Form.Field required>\n            <label style={{display:'inline-block'}}htmlFor=\"passwort\">密碼</label>\n            <Popup\n          trigger={<Icon name='question circle outline' color='red' size='small'/>}\n          content='1. 密碼必須含有至少一個大寫和小寫字母以及一個數字或特殊符號 2. 長度至少超過8個字元'\n          position='top left'\n        />\n            <input type=\"password\" autoComplete=\"false\" name=\"passwort\" placeholder=\"請設定符合規格的密碼\" onChange={this.handleChange} value={this.state.passwort} required/>\n          </Form.Field>\n          <Form.Field required>\n            <label htmlFor=\"passwort_wiederholen\">確認密碼</label>\n            <input type=\"password\" name=\"passwort_wiederholen\"\n            autoComplete=\"false\" placeholder=\"請再次輸入密碼\" onChange={this.handleChange} value={this.state.passwort_wiederholen} required/>\n          </Form.Field>\n          </Form.Group>\n          <Form.Field required>\n      <Checkbox name=\"datenschutz_ok\" value=\"1\" label='了解並閱讀隱私權政策' checked/>\n    </Form.Field>\n    <Form.Field required>\n      <Checkbox name=\"nutzungsbed_ok\" value=\"1\" label='同意使用條款' checked/>\n    </Form.Field>\n          </Segment>\n          <Segment stacked style={{minHeight:'430px', width:'480px', backgroundColor: 'rgba(255,255,255,0.2)'}}>\n          <Header as='h3'>個人資訊<span style={{fontSize:\"14px\"}}>(請使用英文填寫)</span></Header>\n          < Form.Group widths='equal'>\n          <Form.Field required>\n            <label htmlFor=\"vorname\">名字</label>\n            <input type=\"text\" name=\"vorname\" placeholder=\"\" onChange={this.handleChange} value={this.state.vorname} required=\"required\"/>\n          </Form.Field>\n          <Form.Field required>\n            <label htmlFor=\"nachname\">姓氏</label>\n            <input type=\"text\" name=\"nachname\" placeholder=\"\" onChange={this.handleChange} value={this.state.nachname} required/>\n          </Form.Field>\n          </Form.Group>\n          <Form.Field required>\n            <label style={{display:'inline-block'}} htmlFor=\"str_nr\">地址</label>\n            <input type=\"text\" name=\"str_nr\" id=\"str_nr\"  placeholder=\"請輸入行政區域/街道名/門牌號碼\" onChange={this.handleChange} value={this.state.str_nr} required/>\n          </Form.Field>\n          <Form.Field required>\n            <label htmlFor=\"ort\">城市</label>\n            <input type=\"text\" name=\"ort\" placeholder=\"\" onChange={this.handleChange} value={this.state.ort} required/>\n          </Form.Field>\n          <Form.Field required>\n          <label htmlFor=\"land\">國家</label>\n          <Form.Select name=\"land\" placeholder='國家' options={countryOptions} onChange={this.handleChange} value={this.state.land}/>\n          </Form.Field>\n          <Form.Field required>\n            <label htmlFor=\"plz\">郵遞區號</label>\n            <input type=\"text\" name=\"plz\" placeholder=\"\" value={this.state.plz}onChange={this.handleChange} required/>\n          </Form.Field>\n          </Segment>\n        <Button style={{width:'200px',margin:'0 200px',backgroundColor:'#000',color:'#fff549'}} className=\"signin-btn\" fluid size='large'\n        type=\"submit\" >\n             送出註冊\n            </Button>\n        </Form>\n        <div className=\"modal\" style={{visibility: this.state.isLoading? \"visible\":\"hidden\"}}>\n          <div className=\"modal-content\">\n            <Icon name=\"close\" className=\"modal-close\" size=\"small\" onClick={this.handleModal} circular inverted/>\n            {modalContent}\n          </div>\n          </div>\n      </Grid.Column>\n    </Grid>\n    )\n  }\n}\n\nexport default withRouter(Register)","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport Homepage from './Homepage'\nimport SignIn from './SignIn'\nimport ConfirmMail from './ConfirmMail'\nimport Register from './Register'\n\nclass App extends React.Component{\n  render(){\n    return(\n      <Router>\n      <Switch>\n      <Route exact path=\"/\" component={Homepage} />\n      <Route path=\"/step1\" component={Register} />\n      <Route path=\"/step2\" component={ConfirmMail} />\n      <Route path=\"/step3\" component={SignIn} />\n      </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}